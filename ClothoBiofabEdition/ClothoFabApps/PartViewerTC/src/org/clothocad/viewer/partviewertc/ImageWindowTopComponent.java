/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.clothocad.viewer.partviewertc;

import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JScrollPane;
import org.clothocad.viewer.commonviewtc.HubTopComponent;
import org.clothocad.viewer.partviewertc.panels.PartInfoPanel;
import org.clothocore.api.data.Part;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;
//import org.openide.util.ImageUtilities;
import org.netbeans.api.settings.ConvertAsProperties;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.clothocad.viewer.partviewertc//ImageWindow//EN",
autostore = false)
public final class ImageWindowTopComponent extends TopComponent {


    public ImageWindowTopComponent() {

    }

    public ImageWindowTopComponent(final PartInfoPanel pip, final Part apart) {
        _part = apart;
        _pip = pip;
        initComponents();
        setName(NbBundle.getMessage(ImageWindowTopComponent.class, "CTL_ImageWindowTopComponent"));
        setToolTipText(NbBundle.getMessage(ImageWindowTopComponent.class, "HINT_ImageWindowTopComponent"));
    }

    @Override
    public void componentActivated() {
        HubTopComponent.show(_pip, "Part: " + _part.getName());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scroller = new javax.swing.JScrollPane();

        setLayout(new java.awt.BorderLayout());
        add(scroller, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane scroller;
    // End of variables declaration//GEN-END:variables
    /**
     * Gets default instance. Do not use directly: reserved for *.settings files only,
     * i.e. deserialization routines; otherwise you could get a non-deserialized instance.
     * To obtain the singleton instance, use {@link #findInstance}.
     */
    public static synchronized ImageWindowTopComponent getDefault() {
        if (instance == null) {
            instance = new ImageWindowTopComponent();
        }
        return instance;
    }

    public JScrollPane getScroller() {
        return scroller;
    }
    /**
     * Obtain the ImageWindowTopComponent instance. Never call {@link #getDefault} directly!
     */
    public static synchronized ImageWindowTopComponent findInstance() {
        TopComponent win = WindowManager.getDefault().findTopComponent(PREFERRED_ID);
        if (win == null) {
            Logger.getLogger(ImageWindowTopComponent.class.getName()).warning(
                    "Cannot find " + PREFERRED_ID + " component. It will not be located properly in the window system.");
            return getDefault();
        }
        if (win instanceof ImageWindowTopComponent) {
            return (ImageWindowTopComponent) win;
        }
        Logger.getLogger(ImageWindowTopComponent.class.getName()).warning(
                "There seem to be multiple components with the '" + PREFERRED_ID
                + "' ID. That is a potential source of errors and unexpected behavior.");
        return getDefault();
    }

    @Override
    public int getPersistenceType() {
        return TopComponent.PERSISTENCE_NEVER;
    }

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    Object readProperties(java.util.Properties p) {
        if (instance == null) {
            instance = this;
        }
        instance.readPropertiesImpl(p);
        return instance;
    }

    private void readPropertiesImpl(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    protected String preferredID() {
        return PREFERRED_ID;
    }

    private static ImageWindowTopComponent instance;
    private static final String PREFERRED_ID = "ImageWindowTopComponent";

    private JComponent myView;
    private Part _part;
    private PartInfoPanel _pip;
}
