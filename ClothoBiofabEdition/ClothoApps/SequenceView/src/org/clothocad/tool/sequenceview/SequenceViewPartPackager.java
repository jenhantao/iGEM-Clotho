/*
 Copyright (c) 2009 The Regents of the University of California.
 All rights reserved.
 Permission is hereby granted, without written agreement and without
 license or royalty fees, to use, copy, modify, and distribute this
 software and its documentation for any purpose, provided that the above
 copyright notice and the following two paragraphs appear in all copies
 of this software.

 IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
 FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
 ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
 THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
 SUCH DAMAGE.

 THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
 PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
 CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
 ENHANCEMENTS, OR MODIFICATIONS..
 */

package org.clothocad.tool.sequenceview;

/* FIXME
import clothodata.ClothoData;
import clothodata.ClothoDataUseEnum;
import clothodata.ClothoOperationEnum;
import clothodata.ClothoPartsData;
import clothodata.ClothoPartsDataEnum;
import clothodata.PoBoLFieldEnum;
import clothodata.PoBoLObjectEnum;
import clothopartsmanager.ClothoDataPartsRow;
 * */
import java.util.HashMap;
import java.util.Hashtable;
import javax.swing.ImageIcon;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 * An interface for creating parts from sequence data
 * @author  Matthew Johnson
 */
public class SequenceViewPartPackager extends javax.swing.JFrame {

    /** Creates new form SequenceViewPartPackager */
    public SequenceViewPartPackager() {
        initComponents();
    }
    
    /** Creates new form SequenceViewPartPackager */
    public SequenceViewPartPackager(SequenceView c) {
        initComponents();
        _sequenceViewConnection = c;
        //FIXME _partData = new ClothoDataPartsRow(_sequenceViewConnection.getPart());
        _PoBoLHashRef = null;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        partNameTextField = new javax.swing.JTextField();
        vectorNameTextField = new javax.swing.JTextField();
        shortDescTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        refTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        familyComboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        formatComboBox = new javax.swing.JComboBox();
        authorComboBox = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        longDescTextArea = new javax.swing.JTextArea();
        packageButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sequenceTextPane = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sequence View Part Creator");
        setIconImage(new ImageIcon("data/icons/ClothoIcon.png").getImage());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Part Nickname:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Vector Nickname:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Author:");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Format:");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Short Description:");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Part Information");

        partNameTextField.getDocument().addDocumentListener(new DocumentListener(){
            public void changedUpdate(DocumentEvent e){checkPart();}
            public void removeUpdate(DocumentEvent e){checkPart();}
            public void insertUpdate(DocumentEvent e){checkPart();}
        });

        vectorNameTextField.getDocument().addDocumentListener(new DocumentListener(){
            public void changedUpdate(DocumentEvent e){checkVector();}
            public void removeUpdate(DocumentEvent e){checkVector();}
            public void insertUpdate(DocumentEvent e){checkVector();}
        });

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Long Description:");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Reference:");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Family:");

        longDescTextArea.setColumns(20);
        longDescTextArea.setLineWrap(true);
        longDescTextArea.setRows(2);
        longDescTextArea.setWrapStyleWord(true);
        jScrollPane2.setViewportView(longDescTextArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(refTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(shortDescTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(familyComboBox, 0, 200, Short.MAX_VALUE)
                    .addComponent(vectorNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(partNameTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(formatComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 200, Short.MAX_VALUE)
                    .addComponent(authorComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 200, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(partNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vectorNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(formatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(familyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shortDescTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(refTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(authorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        packageButton.setText("Package as Part");
        packageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                packageButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Part Sequence");

        sequenceTextPane.setEditable(false);
        jScrollPane1.setViewportView(sequenceTextPane);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(packageButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelButton)
                            .addComponent(packageButton))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    this.dispose();
}//GEN-LAST:event_cancelButtonActionPerformed


private void packageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_packageButtonActionPerformed
    /*
     *  Passes the part data (in a HashMap stored in a ClothoData object)to the
     *  PartsManager 
     */
   /* FIXME
    ClothoData d = new ClothoData();
    d.set_operation(ClothoOperationEnum.operationAddPart);
    d.set_use_code(ClothoDataUseEnum.exportData);
    d.set_sender(_sequenceViewConnection.get_description());
    d.set_recipient("Parts Manager");
    
    String author = null;
    String family = null;
    String format = null;
    String isCircular = null;
    String longDesc = null;
    String part = null;
    String reference = null;
    String sequence = null;
    String shortDesc = null;
    String type = null;
    String vector = null;
    Hashtable<ClothoPartsDataEnum, PoBoLFieldEnum> savable = new Hashtable<ClothoPartsDataEnum, PoBoLFieldEnum>();
    
    family = (String) familyComboBox.getSelectedItem();
    if (family.isEmpty()) {
        family = null;
    }
    format = (String) formatComboBox.getSelectedItem();
    if (format.isEmpty()) {
        format = null;
    }
    author = (String) authorComboBox.getSelectedItem();
    if (author.isEmpty()) {
        author = null;
    }
    if (!(partNameTextField.getText().isEmpty())) {
        part = partNameTextField.getText();
        type = "Basic";
        savable.put(ClothoPartsDataEnum.PartNickname, PoBoLFieldEnum.Nickname);
    }
    if (!(vectorNameTextField.getText().isEmpty())) {
        vector = vectorNameTextField.getText();
        type = "Vector";
        savable.put(ClothoPartsDataEnum.VectorNickname, PoBoLFieldEnum.Nickname);
    }
    if (!(shortDescTextField.getText().isEmpty())) {
        shortDesc = shortDescTextField.getText();
    }
    if (!(longDescTextArea.getText().isEmpty())) {
        longDesc = longDescTextArea.getText();
    }
    if (!(refTextField.getText().isEmpty())) {
        reference = refTextField.getText();
    }
    if (_sequenceViewConnection.getSequenceView().getCircularBox().isSelected()) {
        isCircular = "true";
    }
    else {
        isCircular = "false";
    }
    sequence = sequenceTextPane.getText();
    
    //create savable for _partData
    savable.put(ClothoPartsDataEnum.Family, PoBoLFieldEnum.Family);
    savable.put(ClothoPartsDataEnum.Format, PoBoLFieldEnum.Format);
    savable.put(ClothoPartsDataEnum.Author, PoBoLFieldEnum.Author);
    savable.put(ClothoPartsDataEnum.ShortDescription, PoBoLFieldEnum.ShortDescription);
    savable.put(ClothoPartsDataEnum.LongDescription, PoBoLFieldEnum.LongDescription);
    savable.put(ClothoPartsDataEnum.Reference, PoBoLFieldEnum.Reference);
    savable.put(ClothoPartsDataEnum.isCircular, PoBoLFieldEnum.isCircular);
    savable.put(ClothoPartsDataEnum.Sequence, PoBoLFieldEnum.Sequence);
    savable.put(ClothoPartsDataEnum.Type, PoBoLFieldEnum.Type);
    
    _partData.set_author(author);
    _partData.set_family(family);
    _partData.set_format(format);
    _partData.set_longDescription(longDesc);
    _partData.set_partNickname(part);
    _partData.set_reference(reference);
    _partData.set_sequence(sequence);
    _partData.set_shortDescription(shortDesc);
    _partData.set_vectorNickname(vector);
    _partData.set_IsCircular(isCircular);
    _partData.set_type(type);
    _partData.set_savableFields(savable);
    
    d.set_payload(_partData);
    
    _sequenceViewConnection.get_hub().get_core().process_data_in_connection(d.get_recipient(), d);
    
    this.dispose();
    * */
}//GEN-LAST:event_packageButtonActionPerformed

    ///////////////////////////////////////////////////////////////////
    ////                         public methods                    ////

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SequenceViewPartPackager().setVisible(true);
            }
        });
    }
    
    /**
     * Sets the text in the Part Sequence text pane
     * @param seq  The string to set the text pane to
     */
    public void setSequence(String seq) {
        sequenceTextPane.setText(seq);
    }
    
    /**
     * Sets the PoBoLHashRef table in order to get Family, Format, and Author
     * information from the database
     */
    public void setPoBoLHashRef(java.util.Hashtable t) {
        _PoBoLHashRef = t;
    }
    
    /**
     * Updates the SequenceViewPartsPackager window with information about the
     * associated part (if any exists) and populates drop down menus with
     * information from the database.
     */
    public void update() {
        if (_PoBoLHashRef != null) {
            /* FIXME
            HashMap authors = (HashMap) _PoBoLHashRef.get(PoBoLObjectEnum.People);
            HashMap families = (HashMap) _PoBoLHashRef.get(PoBoLObjectEnum.Families);
            HashMap formats = (HashMap) _PoBoLHashRef.get(PoBoLObjectEnum.Formats);
            
            authorComboBox.addItem("");
            familyComboBox.addItem("");
            formatComboBox.addItem("");
            
            if (authors != null) {
                java.util.Iterator keys = authors.keySet().iterator();
                while (keys.hasNext()) {
                    authorComboBox.addItem(authors.get(keys.next()));
                }
            }
            
            if (families != null) {
                java.util.Iterator keys = families.keySet().iterator();
                while (keys.hasNext()) {
                    familyComboBox.addItem(families.get(keys.next()));
                }
            }
            
            if (formats != null) {
                java.util.Iterator keys = formats.keySet().iterator();
                while (keys.hasNext()) {
                    formatComboBox.addItem(formats.get(keys.next()));
                }
            }
        }
        
        if (_partData.get_author() != null) {
            String auth = (String) _partData.get_author();
            boolean found = false;
            for (int i = 0; i < authorComboBox.getItemCount() && !found; i++) {
                if (auth.equalsIgnoreCase((String) authorComboBox.getItemAt(i))) {
                    authorComboBox.setSelectedIndex(i);
                    found = true;
                }
            }
            if (!found) {
                authorComboBox.addItem(auth);
            }
        }
        
        if (_partData.get_format() != null) {
            String form = (String) _partData.get_format();
            boolean found = false;
            for (int i = 0; i < formatComboBox.getItemCount() && !found; i++) {
                if (form.equalsIgnoreCase((String) formatComboBox.getItemAt(i))) {
                    formatComboBox.setSelectedIndex(i);
                    found = true;
                }
            }
            if (!found) {
                formatComboBox.addItem(form);
            }
        }
        
        if (_partData.get_family() != null) {
            String fam = (String) _partData.get_family();
            boolean found = false;
            for (int i = 0; i < familyComboBox.getItemCount() && !found; i++) {
                if (fam.equalsIgnoreCase((String) familyComboBox.getItemAt(i))) {
                    familyComboBox.setSelectedIndex(i);
                    found = true;
                }
            }
            if (!found) {
                familyComboBox.addItem(fam);
            }
        }
        
        if (_partData.get_longDescription() != null) {
            longDescTextArea.setText((String) _partData.get_longDescription());
        }
        
        if (_partData.get_reference() != null) {
            refTextField.setText((String) _partData.get_reference());
        }
        
        if (_partData.get_shortDescription() != null) {
            shortDescTextField.setText((String) _partData.get_shortDescription());
        }
        
        if (!(_partData.get_partNickname() == null || ((String) _partData.get_partNickname()).isEmpty())) {
            partNameTextField.setText((String) _partData.get_partNickname());
        }
        
        // Only checks the Vector Nickname if there is no Part Nickname
        else if (!(_partData.get_vectorNickname() == null || ((String) _partData.get_vectorNickname()).isEmpty())) {
            vectorNameTextField.setText((String) _partData.get_vectorNickname());
        }
    */
             }}

    ///////////////////////////////////////////////////////////////////
    ////                         private methods                   ////
    
    private void checkPart() {
        String text = partNameTextField.getText();
        if (text.length() > 0) {
            vectorNameTextField.setEditable(false);
            vectorNameTextField.setToolTipText("Can't enter a vector name if part name is filled out");
        }
        else {
            vectorNameTextField.setEditable(true);
            vectorNameTextField.setToolTipText("");
        }
    }
    
    private void checkVector() {
        String text = vectorNameTextField.getText();
        if (text.length() > 0) {
            partNameTextField.setEditable(false);
            partNameTextField.setToolTipText("Can't enter a part name if vector name is filled out");
        }
        else {
            partNameTextField.setEditable(true);
            partNameTextField.setToolTipText("");
        }
    }
    
    ///////////////////////////////////////////////////////////////////
    ////                         private variables                 ////
    
    //FIXME private ClothoDataPartsRow _partData;
    private SequenceView _sequenceViewConnection;
    private java.util.Hashtable _PoBoLHashRef;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox authorComboBox;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox familyComboBox;
    private javax.swing.JComboBox formatComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea longDescTextArea;
    private javax.swing.JButton packageButton;
    private javax.swing.JTextField partNameTextField;
    private javax.swing.JTextField refTextField;
    private javax.swing.JTextPane sequenceTextPane;
    private javax.swing.JTextField shortDescTextField;
    private javax.swing.JTextField vectorNameTextField;
    // End of variables declaration//GEN-END:variables

}
